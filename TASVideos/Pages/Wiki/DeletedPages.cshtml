@page "{handler?}"
@model DeletedPagesModel
@{
	ViewData.SetTitle("Deleted Pages");
}

<standard-table>
	<table-head columns="Page Name,Revision Count,Existing Page,Actions"></table-head>
	@foreach (var item in Model.DeletedPages.OrderBy(m => m.PageName))
	{
		<tr>
			<td>
				<a condition="!item.HasExistingRevisions" asp-page="/Wiki/RenderDeleted" asp-route-url="@item.PageName">@item.PageName</a>
				<span condition="item.HasExistingRevisions">@item.PageName</span>
			</td>
			<td>@item.RevisionCount</td>
			<td>
				<a condition="@item.HasExistingRevisions" href="/@item.PageName">@item.PageName</a>
			</td>
			<td-action-column>
				@if (User.Has(PermissionTo.DeleteWikiPages))
				{
					<delete-button condition="@item.HasExistingRevisions"
									class="btn-sm"
									asp-href="/Wiki/DeletedPages/Undelete?path=@item.PageName"
									warning-message="This page already exists. Undeleting these revisions will merge them into the history of the existing page. Continue?">
						Undelete
					</delete-button>
					<span condition="!item.HasExistingRevisions">
						<form method="post" asp-page="/Wiki/DeletedPages" asp-page-handler="Undelete">
							<input type="hidden" name="path" value="@item.PageName" />
							<submit-button class="btn-sm">Undelete</submit-button>
						</form>
					</span>
				}
			</td-action-column>
		</tr>
	}
</standard-table>
